name: Deploy to SiteGround

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SITEGROUND_HOST: ssh.greenbayappletonexteriorsolutions.com
      SITEGROUND_PORT: "18765"
      SITEGROUND_USER: u3100-pdmwtlq9gnso
      SITEGROUND_REPO_PATH: /home/customer/www/greenbayappletonexteriorsolutions.com/public_html/
      SITEGROUND_BRANCH: master

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        env:
          SG_SSH_PRIVATE_KEY_B64: ${{ secrets.SG_SSH_PRIVATE_KEY_B64 }}
        run: |
          mkdir -p ~/.ssh
          if [ -z "$SG_SSH_PRIVATE_KEY_B64" ]; then
            echo "::error::SG_SSH_PRIVATE_KEY_B64 secret is not configured."
            exit 1
          fi
          echo "$SG_SSH_PRIVATE_KEY_B64" | base64 -d > ~/.ssh/siteground_key
          chmod 600 ~/.ssh/siteground_key
          ssh-keyscan -p $SITEGROUND_PORT $SITEGROUND_HOST >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          cat <<EOF >> ~/.ssh/config
          Host siteground $SITEGROUND_HOST
            HostName $SITEGROUND_HOST
            User $SITEGROUND_USER
            Port $SITEGROUND_PORT
            IdentityFile ~/.ssh/siteground_key
            IdentitiesOnly yes
          EOF

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Prepare SiteGround repository
        run: |
          set -euo pipefail
          REMOTE_PATH="${SITEGROUND_REPO_PATH%/}"
          ssh -i ~/.ssh/siteground_key -o StrictHostKeyChecking=yes -p "$SITEGROUND_PORT" "$SITEGROUND_USER@$SITEGROUND_HOST" \
            REMOTE_PATH="$REMOTE_PATH" bash <<'EOSSH'
set -e
cd "$REMOTE_PATH"
if [ -f .git/shallow ]; then
  echo 'Remote repository is shallow; fetching full history...'
  git fetch --unshallow || git fetch --unshallow origin || true
else
  echo 'Remote repository already has full history.'
fi
git config receive.shallowUpdate true || true
EOSSH

      - name: Validate SSH connectivity
        run: |
          set -euo pipefail
          ls -al ~/.ssh
          ssh -i ~/.ssh/siteground_key -o StrictHostKeyChecking=yes -p "$SITEGROUND_PORT" "$SITEGROUND_USER@$SITEGROUND_HOST" 'echo "SSH connection established"'

      - name: Push to SiteGround remote
        env:
          REMOTE_URL: ${{ secrets.SG_REMOTE }}
        run: |
          set -euo pipefail
          export GIT_SSH_COMMAND="ssh -i ~/.ssh/siteground_key -o StrictHostKeyChecking=yes -p ${SITEGROUND_PORT}"
          if [ -z "$REMOTE_URL" ]; then
            echo "::error::SG_REMOTE secret is not configured."
            exit 1
          fi
          echo "Using remote: $REMOTE_URL"
          git remote remove siteground >/dev/null 2>&1 || true
          git remote add siteground "$REMOTE_URL"
          git remote -v
          git fetch --unshallow siteground "$SITEGROUND_BRANCH" || true
          git push --force --verbose siteground HEAD:"$SITEGROUND_BRANCH"
